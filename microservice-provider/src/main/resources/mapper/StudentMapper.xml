<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fool.microservice.provider.mapper.StudentMapper">

    <resultMap id="BaseResultMap" type="com.fool.microservice.provider.entity.Student">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="INTEGER"/>
            <result property="grade" column="grade" jdbcType="INTEGER"/>
            <result property="classNo" column="class_no" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,sex,
        grade,class_no,create_time,
        update_time,deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from student
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fool.microservice.provider.entity.Student" useGeneratedKeys="true">
        insert into student
        ( id,name,sex
        ,grade,class_no,create_time
        ,update_time,deleted)
        values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{sex,jdbcType=INTEGER}
        ,#{grade,jdbcType=INTEGER},#{classNo,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP}
        ,#{updateTime,jdbcType=TIMESTAMP},#{deleted,jdbcType=INTEGER}))
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fool.microservice.provider.entity.Student" useGeneratedKeys="true">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="sex != null">sex,</if>
                <if test="grade != null">grade,</if>
                <if test="classNo != null">classNo,</if>
                <if test="createTime != null">createTime,</if>
                <if test="updateTime != null">updateTime,</if>
                <if test="deleted != null">deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">id = #{id,jdbcType=INTEGER},</if>
                <if test="name != null">name = #{name,jdbcType=VARCHAR},</if>
                <if test="sex != null">sex = #{sex,jdbcType=INTEGER},</if>
                <if test="grade != null">grade = #{grade,jdbcType=INTEGER},</if>
                <if test="classNo != null">class_no = #{classNo,jdbcType=INTEGER},</if>
                <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
                <if test="deleted != null">deleted = #{deleted,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fool.microservice.provider.entity.Student">
        update student
        <set>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="sex != null">
                    sex = #{sex,jdbcType=INTEGER},
                </if>
                <if test="grade != null">
                    grade = #{grade,jdbcType=INTEGER},
                </if>
                <if test="classNo != null">
                    class_no = #{classNo,jdbcType=INTEGER},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
                <if test="deleted != null">
                    deleted = #{deleted,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fool.microservice.provider.entity.Student">
        update student
        set 
            name =  #{name,jdbcType=VARCHAR},
            sex =  #{sex,jdbcType=INTEGER},
            grade =  #{grade,jdbcType=INTEGER},
            class_no =  #{classNo,jdbcType=INTEGER},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP},
            deleted =  #{deleted,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
